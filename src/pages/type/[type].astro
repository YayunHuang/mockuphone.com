---
import BaseLayout from "../../layouts/BaseLayout.astro";
import "/src/styles/device.css";

import { DEVICE_MANAGER } from "../../scripts/deviceManager";
import type { Device, DeviceType } from "../../scripts/model";
import { BrandEnum, DeviceTypeEnum } from "../../scripts/parse";

export async function getStaticPaths() {
  const devicePaths = DeviceTypeEnum.options.map((deviceType) => ({
    params: { type: deviceType },
    props: { deviceType: deviceType },
  }));
  const allPath = { params: { type: "all" }, props: { deviceType: "all" } };

  return [allPath, ...devicePaths];
}

const { type } = Astro.params;
const { deviceType } = Astro.props;

const deviceList: Device[] = DEVICE_MANAGER.getDeviceListByType(deviceType);
const brandDeviceList: Partial<Record<BrandEnum, Device[]>> =
  DEVICE_MANAGER.getBrandDeviceList(deviceType);
const nonEmptyBrands: BrandEnum[] = Object.keys(brandDeviceList)
  .filter((b) => {
    const brand = BrandEnum.parse(b);
    const devices: Device[] | undefined = brandDeviceList[brand];
    return devices != null && devices.length > 0;
  })
  .map((b) => BrandEnum.parse(b));
const brandList: string[] = ["all", ...nonEmptyBrands];
---

<BaseLayout>
  <meta
    slot="meta"
    name="description"
    content="MockUPhone supports devices including iPhone mockup, iPad mockup, Android mockup and TV mockup. You can check out the whole device list via this page."
  />
  <script type="text/javascript" src="/scripts/device.js"></script>
  <script define:vars={{ deviceList, brandDeviceList }}>
    window.deviceList = deviceList;
    window.brandDeviceList = brandDeviceList;
  </script>
  <section class="device-type">
    <header>
      <h2 class="device-type__heading">SELECT DEVICE TYPE</h2>
    </header>
    <ul class="device-type-list">
      <li class="device-type-list__item">
        <a href="/type/all">
          <figure>
            {
              type == "all" ? (
                <div class="device-type-list__circle-image device-type-list__circle-image-all--chosen device-type-list__circle-image--chosen" />
              ) : (
                <div class="device-type-list__circle-image device-type-list__circle-image-all" />
              )
            }
            <figcaption class="device-type__name">All</figcaption>
          </figure>
        </a>
      </li>
      <li class="device-type-list__item">
        <a href="/type/phone">
          <figure>
            {
              type == "phone" ? (
                <div class="device-type-list__circle-image device-type-list__circle-image-phone--chosen device-type-list__circle-image--chosen" />
              ) : (
                <div class="device-type-list__circle-image device-type-list__circle-image-phone" />
              )
            }
            <figcaption class="device-type__name">Phone</figcaption>
          </figure>
        </a>
      </li>
      <li class="device-type-list__item">
        <a href="/type/tablet">
          <figure>
            {
              type == "tablet" ? (
                <div class="device-type-list__circle-image device-type-list__circle-image-tablet--chosen device-type-list__circle-image--chosen" />
              ) : (
                <div class="device-type-list__circle-image device-type-list__circle-image-tablet" />
              )
            }
            <figcaption class="device-type__name">Tablet</figcaption>
          </figure>
        </a>
      </li>
      <li class="device-type-list__item">
        <a href="/type/laptop">
          <figure>
            {
              type == "laptop" ? (
                <div class="device-type-list__circle-image device-type-list__circle-image-computer--chosen device-type-list__circle-image--chosen" />
              ) : (
                <div class="device-type-list__circle-image device-type-list__circle-image-computer" />
              )
            }
            <figcaption class="device-type__name">Laptop</figcaption>
          </figure>
        </a>
      </li>
      <li class="device-type-list__item">
        <a href="/type/wearables">
          <figure>
            {
              type == "wearables" ? (
                <div class="device-type-list__circle-image device-type-list__circle-image-wearables--chosen device-type-list__circle-image--chosen" />
              ) : (
                <div class="device-type-list__circle-image device-type-list__circle-image-wearables" />
              )
            }
            <figcaption class="device-type__name">Wearables</figcaption>
          </figure>
        </a>
      </li>
      <li class="device-type-list__item">
        <a href="/type/tv">
          <figure>
            {
              type == "tv" ? (
                <div class="device-type-list__circle-image device-type-list__circle-image-tv--chosen device-type-list__circle-image--chosen" />
              ) : (
                <div class="device-type-list__circle-image device-type-list__circle-image-tv" />
              )
            }
            <figcaption class="device-type__name">TV</figcaption>
          </figure>
        </a>
      </li>
    </ul>
    <ul class="device-brand-list">
      {
        brandList.map((b: string) => (
          <li class="device-brand-list__item">
            <button
              class={`device-brand-list__item-button ${
                b === "all" ? "device-brand-list__item-button--selected" : ""
              }`}
              id={`device-brand-list__item-button__${b}`}
              data-brand-name={b}
            >
              {b === "all" ? "All Brand" : b}
            </button>
          </li>
        ))
      }
    </ul>
  </section>
  <section class="select-device">
    <ul class="device-section-list">
      {
        Object.keys(brandDeviceList).map((b: string) => {
          const brand = BrandEnum.parse(b);
          const devices = brandDeviceList[brand];
          if (devices == null || devices.length === 0) {
            return undefined;
          }
          return (
            <li
              class="device-section-list__item"
              id={`device-section-list__item-${b}`}
              data-brand-name={b}
            >
              <section
                id={`device-section-${b}`}
                class="device-section"
                data-brand-name={b}
              >
                <h3 class="device-section__brand-name">
                  {brand.toUpperCase()}
                </h3>
                {
                  <ul class="device-grid-list">
                    {/* FIXME: Remove background color for debugging */}
                    {devices.map((deviceDetail: Device) => (
                      <div
                        class="device-grid-container"
                        data-device-id={deviceDetail.device_id}
                      >
                        <h3 class="device-grid-container-header">
                          {deviceDetail.name}
                        </h3>
                        <li
                          class="device-grid"
                          style={{
                            backgroundColor: deviceDetail.color.hexcode,
                          }}
                          data-image-index="0"
                          data-n-image={deviceDetail.imagePath?.length}
                          id={deviceDetail.device_id}
                        >
                          <a
                            class="device-grid__link"
                            href={"/device/" + deviceDetail.device_id}
                          >
                            {deviceDetail.imagePath?.map(
                              (image: [string, string], index: number) => {
                                if (index == 0)
                                  return (
                                    <img
                                      class="device-grid__image"
                                      src={image[0]}
                                      alt={image[1]}
                                    />
                                  );
                                else
                                  return (
                                    <img
                                      class="device-grid__image d-none"
                                      src={image[0]}
                                      alt={image[1]}
                                    />
                                  );
                              },
                            )}
                            <div class="device-grid__hover-blur d-none" />
                            <div class="device-grid__overlay d-none">
                              <header class="device-grid__overlay-header">
                                <h3 class="device-grid__overlay-device-name">
                                  {deviceDetail.short_name ?? deviceDetail.name}
                                </h3>
                                <p class="device-grid__overlay-device-desc">
                                  {deviceDetail.desc}
                                </p>
                              </header>
                              <button class="device-grid__overlay-pick-btn">
                                Pick it
                              </button>
                            </div>
                          </a>
                        </li>
                      </div>
                    ))}
                  </ul>
                }
              </section>
            </li>
          );
        })
      }
      <li class="device-section-list__request-device">
        <section class="request-device-section">
          <img
            class="request-device-section__image"
            src="/Images/request-device.svg"
          />
          <p class="request-device-section__desc">
            Can't find the device you want?
          </p>
          <a class="request-device-section__request-link" href="/request_device"
            ><button class="request-device-section__request-btn">
              Request your device
            </button></a
          >
        </section>
      </li>
    </ul>
  </section>
</BaseLayout>
